package com.ly.neuter.core.utils;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.Date;public class DateOrTimeUtils {    public static String formateTime(String time) {        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy年MM月dd日");        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy年MM月dd日 下午HH:mm:ss");        try {            Date date = sdf2.parse(time);            return sdf1.format(date);        } catch (Exception e) {            e.printStackTrace();        }        return time;    }    public static String getCurrentDateTime() {        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy年MM月dd日");        return sdf1.format(new Date());    }    public static String getDateFromTime(long time) {        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");        Date date = new Date(time);        return sdf.format(date);    }    public static String getHourDateFromTime(long time) {        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");        Date date = new Date(time);        return sdf.format(date);    }    public static boolean isChooseTimeSmallThanCur(String startTime,                                                   String curTime) {        DateFormat sdf1 = new SimpleDateFormat("yyyy年MM月dd日");        try {            Date d1 = sdf1.parse(startTime);            Date d2 = sdf1.parse(curTime);            long t = d1.getTime() - d2.getTime();            return t <= 10 * 60 * 1000;        } catch (Exception e) {            e.printStackTrace();        }        return false;    }    public static String formateDate(String time) {        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy年MM月dd日");        try {            Date date = sdf2.parse(time);            return sdf1.format(date);        } catch (Exception e) {            e.printStackTrace();        }        return time;    }}